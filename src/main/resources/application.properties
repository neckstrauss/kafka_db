spring.application.name=spring-boot-camel-rest-dsl

#spring.main.sources=com.assertsolutions

logging.config=classpath:logback.xml

# the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
camel.springboot.name=CamelCxfRest

# to reconfigure the camel servlet context-path mapping to use /api/* instead of /camel/*
camel.component.servlet.mapping.context-path=/api/*

spring.mvc.static-path-pattern=/resources/**

#==============================================================================
# Server Configuration
#==============================================================================
# lets listen on all ports to ensure we can be invoked from the pod IP
# Default Port
#server.servlet-path: /system
 
server.address=0.0.0.0

#==============================================================================
# Management Configuration
#==============================================================================
management.address=0.0.0.0

# lets use a different management port in case you need to listen to HTTP requests on 8080
management.port=8082
server.port=8082

#==============================================================================
# Actuator
#==============================================================================
info.app.name=${spring.application.name}
info.app.description=This is my first spring boot application
info.app.version=@project.version@

# disable all management endpoints except health
endpoints.enabled = true
endpoints.info.sensitive = false
#endpoints.health.enabled = true
# Disable auth for actuator endpoints
management.security.enabled=false


# Disable static content
#spring.resources.add-mappings=true

# Enable looking for .gz resources
#spring.resources.chain.enabled=true
#spring.resources.chain.gzipped=true

#==============================================================================
# Swagger Info
#==============================================================================

#api.version = @project.version@
#api.title = ${spring.application.name}
#api.description = "Descripcion Del Proyecto "
#api.description.service = "Descripcion Servicio"
#api.description.input = "Descripcion Parametro Entrada"
#api.description.input.post = "Descripcion Parametro Entrada"


#==============================================================================
# sqls
#==============================================================================
sql.insert.auditoria=INSERT INTO Seguridad.dbo.Auditoria_Log_Notificador2 (CLIENTE, FECHA_LOG, USUARIO_CREACION, NIVEL_LOG, TIPO_EVENTO, DESCRIPCION_EVENTO, CONTENIDO_LOG, IP_ORIGEN, ID_EXCHANGE, APLICACION, OPERACION) VALUES(:#${body.cliente}, :#${body.fechaLog}, :#${body.usuarioCreacion}, :#${body.nivelLog}, :#${body.tipoEvento}, :#${body.descripcion}, :#${body.contenidoLog}, :#${body.ipOrigen}, :#${body.idExchange}, :#${body.aplicacion}, :#${body.operacion});
sql.insert.esquema=Seguridad.dbo.


CONFIG_LOCATION=classpath: